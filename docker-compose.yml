# vim: ts=2 sw=2 et
version: '2.2'
services:

  db:
    restart: always
    image: postgres:9.6-alpine
    networks:
      - db_network
    volumes:
      - /srv/mastodon/vulpine.club/postgres:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:4.0-alpine
    networks:
      - redis_network
    volumes:
      - /srv/mastodon/vulpine.club/redis:/data

  es:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - es_network
    volumes:
      - /srv/mastodon/vulpine.club/elasticsearch:/usr/share/elasticsearch/data

  web:
    image: vulpineclub/mastodon:production
    restart: always
    scale: 2
    env_file: .env.production
    # are these envs necessary?
    environment:
      - WEB_CONCURRENCY=2
      - MAX_THREADS=15
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000 -b '0.0.0.0'"
    networks:
      external_network:
      db_network:
      es_network:
      redis_network:
      internal_network:
        aliases:
          - fe_web
    depends_on:
      - db
      - redis
      - es
    volumes:
      - /srv/mastodon/vulpine.club/public/system:/mastodon/public/system
      - /etc/localtime:/etc/localtime:ro

  streaming:
    image: vulpineclub/mastodon:production
    restart: always
    scale: 2
    env_file: .env.production
    command: yarn start
    networks:
      external_network:
      db_network:
      redis_network:
      internal_network:
        aliases:
          - fe_streaming
    depends_on:
      - db
      - redis

  sidekiq:
    image: vulpineclub/mastodon:production
    restart: always
    scale: 2
    env_file: .env.production
    command: bundle exec sidekiq -c 10
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - db_network
      - es_network
      - redis_network
    volumes:
      - /srv/mastodon/vulpine.club/public/system:/mastodon/public/system

## Uncomment to enable federation with tor instances along with adding the following ENV variables
## http_proxy=http://privoxy:8118
## ALLOW_ACCESS_TO_HIDDEN_SERVICE=true
#  tor:
#    build: https://github.com/usbsnowcrash/docker-tor.git
#    networks:
#      - external_network
#      - internal_network
#
#  privoxy:
#    build: https://github.com/usbsnowcrash/docker-privoxy.git
#    command: /opt/sbin/privoxy --no-daemon --user privoxy.privoxy /opt/config
#    volumes:
#      - ./priv-config:/opt/config
#    networks:
#      - external_network
#      - internal_network

# local additions
  ambassador:
    restart: always
    image: vulpineclub/ambassador
    env_file: .env.ambassador
    command: yarn start
    depends_on:
      - db
    networks:
      - external_network
      - db_network

  # easy client access to the db server side of things
  dbbackup:
    restart: "no"
    image: postgres:9.6-alpine
    env_file: .env.production
    command: sh -c "psql -h $${DB_HOST} -p $${DB_PORT} -d $${DB_NAME} -U $${DB_USER}"
    cpus: 0.25
    depends_on:
      - db
    networks:
      - db_network
    volumes:
      - /srv/mastodon/vulpine.club/pg_dump:/dump

  # front end web server
  # https://hub.docker.com/_/nginx/
  nginx:
    restart: always
    image: nginx:alpine
    depends_on:
      - web
      - streaming
    ports:
      - "80:80"
      - "443:443"
    networks:
      external_network:
        ipv6_address: 2600:3c03:e000:27b::e621:10
      internal_network:
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /etc/nginx:/etc/nginx
      - /srv/mastodon/vulpine.club/public:/srv/mastodon/vulpine.club/public
      - /srv/mastodon/vulpine.club/nginx_cache:/var/cache/nginx
      - /srv/mastodon/vulpine.club/nginx_logs:/var/log/nginx

networks:
  external_network:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16
        - subnet: 2600:3c03:e000:027b::/64
  internal_network:
    internal: true
  db_network:
    internal: true
  redis_network:
    internal: true
  es_network:
    internal: true

